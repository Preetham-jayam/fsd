<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload page</title>
    <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
  />
  <link
    rel="stylesheet"
    href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
  />
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
    crossorigin="anonymous"
  />
  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css"
  />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/css/fileinput.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/css/fileinput-rtl.min.css">
   <link rel="stylesheet" href="/admindb.css">
  

   
</head>
<body>
  


    <nav class="navbar navbar-expand-lg navbar-dark " id="navbar" style="background-color: #06bbcc;">
        <a class="navbar-brand" href="/teacher/home">
          <i class="fa fa-home fa-lg"></i>
        </a>
        <a class="navbar-brand" href="/teacher/home">Eduphoria</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav mr-auto"> 
          </ul>
          
         
          <ul class="navbar-nav ml-auto">
          <ul class="navbar-nav  mr-sm-2">
          </ul>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown"
                aria-haspopup="true" aria-expanded="false">
                <i class="fa fa-user" aria-hidden="true"></i>
                Welcome, <b>Dr.<%=teacher.FullName%></b>!
              </a>
              <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                <a class="dropdown-item" href="/teacher/profile">
                  <i class="fa fa-user" aria-hidden="true"></i>
                  Profile
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item" href="/">
                  <i class="fa fa-sign-out" aria-hidden="true"></i>
                  Sign Out
                </a>
              </div>
            </li>
           
      
          </ul>
        </div>
      </nav>
      <% if (messages.success) { %>
        <div class="alert alert-success"><%= messages.success %></div>
      <% } %>
      
      <% if (messages.error) { %>
        <div class="alert alert-danger"><%= messages.error %></div>
      <% } %>




      <form method="post" id="frmCourse" enctype="multipart/form-data" action="/teacher/course/upload/<%=data._id%>">
        <div class="card">
          <h3 class="card-header">Upload</h3>
          <div class="card-body">
            <div class="form-group">
              <input type="hidden" name="IdCourse" id="txtIdCourse" value="<%=data._id%>">
            </div>
            <div class="form-group">
            <div class="row">
              <div style="width: 15px;"></div>
               <label for="chapter">Chapter:</label>
                  <div class="col-sm-4">
                      <div class="input-group">
                      <select name="chapter" id="txtChapter" style="width: 100%;height: 35px;">
                          <option value="new" id="new" selected>New Chapter</option>
                          <% chapters.forEach(chapter => { %>
                            <option value="<%=chapter._id%>" id="<%=chapter._id%>"><%=chapter.name%></option>
                          <%})%>
                      </select>
                      </div>
                  </div>
                  <div class="col-sm-4">
                    <input type="text" id="txtNameChapter" name="newNameChapter" placeholder=" fill new chapter"style="width: 100%;height: 35px;">
                  </div>
            </div>
            </div>
            <div class="form-group">
              <div class="row">
              <div style="width: 15px;"></div>
                  <label for="lesson">Lesson:</label>
                  <div class="col-sm-4">
                      <div class="input-group">
                      <select name="lesson" id="txtLesson" style="width: 100%;height: 35px;">
                         <option value="new" data-tag="new" selected>New Lesson</option>
                  
                          <% lessons.forEach(lesson => { %>
                            <option value="<%=lesson._id%>" data-tag="<%=lesson.chapter%>"><%=lesson.title%></option>
                          <%})%>
                        
                      </select>
                      </div>
                  </div>
                  <div class="col-sm-4">
                    <input type="text" id="txtNameLesson" name="newNameLesson" placeholder=" fill new lesson" style="width: 100%;height: 35px;">
                  </div>
                  <div class="col-sm-10"></div>
              </div>
            </div>
            <div class="form-group file-loading">
              <label for="Video">Video:</label>
              <input id="Video" name="fuVideo" type="file" class="file" data-allowed-file-extensions='["mp4", "mov", "avi"]'>
            </div>
          </div>
          <div class="card-footer text-muted">
              <a class="btn btn-success" href="/teacher/courseDetails/<%=data._id%>">Go Back</a>
            <button class="btn btn-outline-success" style="float: right;">
              <i class="fa fa-check" aria-hidden="true"><strong>Save</strong></i>
            </button>
          </div>
        </div>
      </form>


</body>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha256-jXCJJT3KKcnNjZ3rfsabCj1EX4j2omR4xxm+H5CtywE=" crossorigin="anonymous"></script>
<script src="/js/bootnavbar.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/themes/fa/theme.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.1.3/js/fileinput.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const fuVideo = document.getElementById('fuVideo');

    fuVideo.addEventListener('change', function() {
      const files = fuVideo.files;
      const allowedFileTypes = ["mp4", "mov", "avi"];
      const maxFileCount = 10;
      if (files.length > maxFileCount) {
        alert('You can only select up to ' + maxFileCount + ' files.');
        fuVideo.value = '';
        return;
      }
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const fileNameParts = file.name.split('.');
        const fileExtension = fileNameParts[fileNameParts.length - 1].toLowerCase();
        if (allowedFileTypes.indexOf(fileExtension) === -1) {
          alert('File type not allowed. Please choose a valid file type (' + allowedFileTypes.join(', ') + ').');
          fuVideo.value = '';
          return;
        }
      }
    });
  });
</script>


<script>
  document.addEventListener('DOMContentLoaded', function() {
    const frmCourse = document.getElementById('frmCourse');
    const txtChapter = document.getElementById('txtChapter');
    const txtNameChapter = document.getElementById('txtNameChapter');
    const txtLesson = document.getElementById('txtLesson');
    const txtNameLesson = document.getElementById('txtNameLesson');

    frmCourse.addEventListener('submit', function(e) {
      e.preventDefault();
      const selectedChapter = txtChapter.value;
      const selectedLesson = txtLesson.value;

      if (selectedChapter === 'new') {
        if (txtNameChapter.value === '') {
          Swal.fire({
            icon: 'error',
            text: 'Empty name of new Chapter.',
          });
          return;
        }
        if (txtNameLesson.value === '') {
          Swal.fire({
            icon: 'error',
            text: 'Empty name of new Lesson.',
          });
          return;
        }
      } else if (selectedLesson === 'new' && txtNameLesson.value === '') {
        Swal.fire({
          icon: 'error',
          text: 'Empty name of new Lesson.',
        });
        return;
      }

      frmCourse.submit();
    });

    txtChapter.addEventListener('change', function() {
      const selected = txtChapter.value;
      let url = ''; 

      document.querySelectorAll('#txtLesson option').forEach(function(element) {
        if (element.getAttribute('data-tag') !== selected && element.getAttribute('data-tag') !== 'new') {
          element.classList.add('hidden');
          element.classList.remove('visible');
        } else {
          element.classList.add('visible');
          element.classList.remove('hidden');
        }
      });

      if (selected === 'new') {
        txtNameChapter.classList.add('visible');
        txtNameChapter.classList.remove('hidden');
        txtNameChapter.style.display = 'block';
        txtNameLesson.classList.add('visible');
        txtNameLesson.classList.remove('hidden');
        txtNameLesson.style.display = 'block';
        frmCourse.action = url;
      } else {
        txtNameChapter.classList.remove('visible');
        txtNameChapter.classList.add('hidden');
        txtNameChapter.style.display = 'none';
      }

      const txtLessonOptions = txtLesson.options;
      let firstVisibleOptionIndex = -1;

      for (let i = 0; i < txtLessonOptions.length; i++) {
        if (txtLessonOptions[i].classList.contains('visible')) {
          firstVisibleOptionIndex = i;
          break;
        }
      }

      txtLesson.selectedIndex = firstVisibleOptionIndex;
    });

    txtChapter.dispatchEvent(new Event('change'));

    txtLesson.addEventListener('change', function() {
      const selected = txtLesson.value;

      if (selected === 'new') {
        txtNameLesson.classList.add('visible');
        txtNameLesson.classList.remove('hidden');
        txtNameLesson.style.display = 'block';
      } else {
        txtNameLesson.classList.remove('visible');
        txtNameLesson.classList.add('hidden');
        txtNameLesson.style.display = 'none';
      }
    });
  });
</script>


</html>